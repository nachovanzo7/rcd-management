version: '3.8'

services:
  db:
    image: postgres:14-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: gestion_rcd_database
      POSTGRES_USER: rcd_username
      POSTGRES_PASSWORD: rcd_gestion
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: django_backend
    command: >
      sh -c "python manage.py migrate &&
             gunicorn rcdproject.rcdproject.wsgi:application --bind 0.0.0.0:8080"
    volumes:
      - ./backend:/app
    ports:
      - "8000:8080"  # Mapea el puerto 8080 del contenedor al 8000 de tu host
    environment:
      - DEBUG=False
      - SECRET_KEY=django-insecure-d&@!3$$x18jknwgos(acz6+&2_)-*+wsv85(j)e&fg&l)czvg8v
      - POSTGRES_DB=gestion_rcd_database
      - POSTGRES_USER=rcd_username
      - POSTGRES_PASSWORD=rcd_gestion
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react_frontend
    volumes:
      - ./frontend:/app
    ports:
      - "3000:8080"  # Mapea el puerto 8080 del contenedor al 3000 de tu host

volumes:
  postgres_data:
